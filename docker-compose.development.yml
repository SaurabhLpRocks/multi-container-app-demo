version: '3.4'

services:
  core-web-api-service:
    image: core.web.api.dev.image
    container_name: core.web.api.dev.container
    build:
      args:
        buildconfig: Debug
      context: ./CoreWebApi
      dockerfile: .docker/development.dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

      # Set the certificate env variables (We copied certificate from host to below location. See volumes)
      - Kestrel__Certificates__Default__Path=/root/.dotnet/https/aspnetcore-cert.pfx
      - Kestrel__Certificates__Default__Password=yourpassword

      # The .net core base image used in the docker file, runs the app on port 80 by default
      # Force it to run on ports 5000 & 5001
      # Also we are specifying 0.0.0.0 instead of localhost
      # as the app crashes inside docker when used localhost.
      - ASPNETCORE_URLS=http://0.0.0.0:5000/;https://0.0.0.0:5001
      - DOTNET_USE_POLLING_FILE_WATCHER=true
    ports:
      - 5000:5000
      - 5001:5001
    volumes:
      # Map the certificate from host to the container
      - 'c:/cert/:/root/.dotnet/https'
      - 'c:/cert/:/usr/local/share/ca-certificates'
      - './CoreWebApi/:/src'

  core-data-api-service:
    image: core.data.api.dev.image
    container_name: core.data.api.dev.container
    build:
      args:
        buildconfig: Debug
      context: ./CoreDataApi
      dockerfile: .docker/development.dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

      # Set the certificate env variables (We copied certificate from host to below location. See volumes)
      - Kestrel__Certificates__Default__Path=/root/.dotnet/https/aspnetcore-cert.pfx
      - Kestrel__Certificates__Default__Password=yourpassword

      # The .net core base image used in the docker file, runs the app on port 80 by default
      # Force it to run on ports 5000 & 5001
      # Also we are specifying 0.0.0.0 instead of localhost
      # as the app crashes inside docker when used localhost.
      - ASPNETCORE_URLS=http://0.0.0.0:5003/;https://0.0.0.0:5002
      - DOTNET_USE_POLLING_FILE_WATCHER=true
    ports:
      - 5002:5002
      - 5003:5003
    volumes:
      # Map the certificate from host to the container
      - 'c:/cert/:/root/.dotnet/https'
      - 'c:/cert/:/usr/local/share/ca-certificates'
      - './CoreDataApi/:/src'
  ng-app-service:
    image: ng.app.dev.image
    container_name: ng.app.dev.container
    build:
      context: ./ng-app
      dockerfile: .docker/development.dockerfile
    environment:
      NODE_ENV: development
    volumes:
      - './ng-app/:/usr/share/app'
      - /app/node_modules/
    ports:
      - 4200:80
    command: ['ng', 'serve', '--host=0.0.0.0', '--watch', '--poll=2000']
